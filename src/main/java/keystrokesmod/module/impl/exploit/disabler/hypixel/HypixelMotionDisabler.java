package keystrokesmod.module.impl.exploit.disabler.hypixel;

import keystrokesmod.event.PreMotionEvent;
import keystrokesmod.event.ReceivePacketEvent;
import keystrokesmod.event.WorldChangeEvent;
import keystrokesmod.module.ModuleManager;
import keystrokesmod.module.impl.client.Notifications;
import keystrokesmod.module.impl.exploit.disabler.HypixelDisabler;
import keystrokesmod.module.setting.impl.SubMode;
import net.minecraft.network.play.server.S08PacketPlayerPosLook;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import org.jetbrains.annotations.NotNull;

/**
 * Skidded from Rise (com.alan.clients.module.impl.exploit.disabler.WatchdogDisabler)
 * <p>
 * Counter-confused by xia__mc
 * @see hackclient.rise.iq
 * @author Alan34
 */
public class HypixelMotionDisabler extends SubMode<HypixelDisabler> {
    private Integer op;
    private boolean oq;
    private boolean fk;
    private int offGroundTicks = 0;
    private static boolean isFinished = false;
    
    public HypixelMotionDisabler(String name, @NotNull HypixelDisabler parent) {
        super(name, parent);
    }

    public static boolean isDisabled() {
        if (!ModuleManager.disabler.isEnabled()) return false;
        if (!(ModuleManager.disabler.mode.getSelected() instanceof HypixelDisabler)) return false;
        if (!(((HypixelDisabler) ModuleManager.disabler.mode.getSelected()).motion.getSelected() instanceof HypixelMotionDisabler)) return false;
        return isFinished;
    }

    @SubscribeEvent
    public void onPreMotion(PreMotionEvent event) {
        if (this.fk && mc.thePlayer.onGround) {
            mc.thePlayer.jump();
            this.fk = false;
            this.oq = true;
        } else if (offGroundTicks >= 9 && this.oq) {
            if (offGroundTicks % 2 == 0) {
                event.setPosX(event.getPosX() + 0.095);
            }

            mc.thePlayer.motionX = mc.thePlayer.motionY = mc.thePlayer.motionZ = 0.0;
        }
    }

    @SubscribeEvent
    public void onReceivePacket(@NotNull ReceivePacketEvent event) {
        if (event.getPacket() instanceof S08PacketPlayerPosLook) {
            this.op = this.op + 1;
            if (this.op == 20) {
                this.oq = false;
                this.op = 0;
                Notifications.sendNotification(Notifications.NotificationTypes.INFO, "Automatically disabled Watchdog Jump check", 1000);
                isFinished = true;
            }
        }
    }

    @SubscribeEvent
    public void onWorldChange(WorldChangeEvent event) {
        isFinished = false;
        Notifications.sendNotification(Notifications.NotificationTypes.INFO, "Disabling Jump check for Watchdog", 4000);
        this.fk = true;
        this.oq = false;
        this.op = 0;
    }

    @Override
    public void onUpdate() {
        if (mc.thePlayer.onGround)
            offGroundTicks = 0;
        else 
            offGroundTicks++;
    }

    @Override
    public void onDisable() {
        isFinished = false;
    }

    @Override
    public void onEnable() {
        onWorldChange(null);
    }
}
